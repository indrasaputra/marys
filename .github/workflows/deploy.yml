name: Deploy

on: [push, pull_request]
  
jobs:
  code-linter:
    name: Lint all codes
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository 
        uses: actions/checkout@v2
      - name: Lint using golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.38.0

  import-linter:
    name: Lint import block
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    container:
      image: indrasaputra/protogen:0.0.1
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Check import blocks
        run: |
          make format
          make check-import

  deploy-cloud-func:
    name: Deploy to GCP Cloud Functions
    if: github.event_name == 'push' && github.repository == 'indrasaputra/marys' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/deployment')
    runs-on: ubuntu-latest
    needs: [code-linter, import-linter]
    steps: 
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Deployment
        id: deployment
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: marys
          runtime: go113
          region: ${{ secrets.GCP_REGION }}
          credentials: ${{ secrets.GCP_CREDENTIALS }}
          entry_point: ReceiveNotification
          env_vars: TELEGRAM_RECIPIENT_ID=${{ secrets.TELEGRAM_RECIPIENT_ID }},TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }},TELEGRAM_URL=${{ secrets.TELEGRAM_URL }}
      - name: Verify deployment
        run: curl "${{ steps.deployment.outputs.url }}"